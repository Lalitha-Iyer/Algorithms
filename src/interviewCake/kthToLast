/*

Write a function kthToLastNode() that takes an integer kk and the headNode of a singly linked list, and returns the kkth to last node in the list.


eg:

root -2-3-5-6-7-8
kthToLastNode(2,root);
returns6
*/



function  kthToLastNode(kk, head)
{
  current = head;
  i = 0;
  temp =current;
  while(i < kk){
    
    if (!temp.next) {
            throw new Error('k is larger than the length of the linked list: ' + k);
    }    
    temp = temp.next;
    i++;
  }     
  kthToCurrent = temp;
 
  while(kthToCurrent.next != null)
  {
      current = current.next;
      kthToCurrent = kthToCurrent.next;
  }  

  return current;
    


}

function Node(val)
{
    this.val = val;
    this.next = null;
}


(function(){

    root = new Node(3);
    root.next = new Node(5);
    root.next.next = new Node(7);
    root.next.next.next = new Node(8);
    root.next.next.next.next = new Node(15);

    console.log( kthToLastNode(3,root).val);
        
})();
