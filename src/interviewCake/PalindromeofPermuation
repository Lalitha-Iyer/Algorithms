function isPalindrome(word){
    
    cArray = word.split('');
    
    i =-1;
    j = word.length;
    
    //LI 
   // cArray[0... i] == C[ word.length .. j]
    while( j-i > 1 )
    {
        i ++ ;
        j --;
        if( cArray[i] !== cArray[j]){
            return false;
        }

    }
    return true;
}


function isPermutePalindrome(word)
{
        cArray = word.split('');
        var mySet = new Set();
        cArray.forEach(function(element) {
         //   console.log(element);
            mySet.has(element)?mySet.delete(element):mySet.add(element);
        });

        console.log(mySet.size);
        
        return mySet.size <=1 ;
     
}

//console.log(isPalindrome('nan'));
console.log(isPermutePalindrome('malayalam'));
